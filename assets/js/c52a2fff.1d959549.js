"use strict";(self.webpackChunkclassic=self.webpackChunkclassic||[]).push([[2320],{8862:(e,o,n)=>{n.r(o),n.d(o,{assets:()=>t,contentTitle:()=>i,default:()=>l,frontMatter:()=>r,metadata:()=>d,toc:()=>c});var s=n(4848),a=n(8453);const r={id:"tipo-inteiro",title:"Tipo Inteiro",tags:["protocolos","tipos prim\xe1rios","tipos de dados","inteiro","python"],sidebar_position:1},i=void 0,d={id:"python-base/base/tipos/tipo-primario/tipo-inteiro",title:"Tipo Inteiro",description:"Inteiro",source:"@site/docs/python-base/base/tipos/tipo-primario/inteiro.md",sourceDirName:"python-base/base/tipos/tipo-primario",slug:"/python-base/base/tipos/tipo-primario/tipo-inteiro",permalink:"/albertonoguchi/docs/python-base/base/tipos/tipo-primario/tipo-inteiro",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/python-base/base/tipos/tipo-primario/inteiro.md",tags:[{label:"protocolos",permalink:"/albertonoguchi/docs/tags/protocolos"},{label:"tipos prim\xe1rios",permalink:"/albertonoguchi/docs/tags/tipos-primarios"},{label:"tipos de dados",permalink:"/albertonoguchi/docs/tags/tipos-de-dados"},{label:"inteiro",permalink:"/albertonoguchi/docs/tags/inteiro"},{label:"python",permalink:"/albertonoguchi/docs/tags/python"}],version:"current",sidebarPosition:1,frontMatter:{id:"tipo-inteiro",title:"Tipo Inteiro",tags:["protocolos","tipos prim\xe1rios","tipos de dados","inteiro","python"],sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Prim\xe1rio",permalink:"/albertonoguchi/docs/category/prim\xe1rio"},next:{title:"Tipos Float, Bool e NoteType",permalink:"/albertonoguchi/docs/python-base/base/tipos/tipo-primario/tipo-float-bool-notetype"}},t={},c=[{value:"Inteiro",id:"inteiro",level:3}];function _(e){const o={code:"code",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(o.h3,{id:"inteiro",children:"Inteiro"}),"\n",(0,s.jsxs)(o.p,{children:["O tipo usado para armazenar os n\xfameros inteiros em Python \xe9 representado pela\nclasse ",(0,s.jsx)(o.code,{children:"int"}),". Em Python, n\xf3s n\xe3o precisamos declarar qual o tipo de dado a ser\nusado, pois o Python faz a infer\xeancia de tipos dinamicamente. O interpretador\nprimeiro verifica como o valor se parece e ent\xe3o decide por conta pr\xf3pria qual\na classe a ser utilizada. Abaixo, exemplos de uso de ",(0,s.jsx)(o.code,{children:"int"}),":"]}),"\n",(0,s.jsx)(o.pre,{children:(0,s.jsx)(o.code,{className:"language-python",children:"# a idade de uma pessoa\nidade = 25\n\n# o c\xf3digo de um produto\ncodigo_produto = 4587\n\n# quantidade de itens\nquantidade = 3\n"})}),"\n",(0,s.jsxs)(o.p,{children:["Em qualquer um dos casos acima, o Python ir\xe1 armazenar como ",(0,s.jsx)(o.code,{children:"int"}),", e voc\xea pode\nusar a fun\xe7\xe3o ",(0,s.jsx)(o.code,{children:"type"})," para verificar:"]}),"\n",(0,s.jsx)(o.pre,{children:(0,s.jsx)(o.code,{className:"language-python",children:">>> type(idade)\nint\n"})}),"\n",(0,s.jsx)(o.p,{children:"Voc\xea at\xe9 pode, se desejar, for\xe7ar o tipo de dado explicitamente, mas isso \xe9\nconsiderado redundante:"}),"\n",(0,s.jsx)(o.pre,{children:(0,s.jsx)(o.code,{className:"language-python",children:"idade = int(25)  # isso funciona, mas \xe9 redundante\n"})}),"\n",(0,s.jsxs)(o.p,{children:[(0,s.jsx)(o.code,{children:"idade"})," \xe9 um identificador que faz refer\xeancia ao valor 25 e n\xf3s podemos fazer\numa variedade de opera\xe7\xf5es com este valor. Essas opera\xe7\xf5es fazem parte do que\nchamamos Protocolo do objeto, e quem define os protocolos que o objeto\nimplementa \xe9 a classe ",(0,s.jsx)(o.code,{children:"int"}),"."]}),"\n",(0,s.jsxs)(o.p,{children:["Voc\xea pode, no seu terminal, verificar todos os protocolos que o ",(0,s.jsx)(o.code,{children:"int"}),"\nimplementa."]}),"\n",(0,s.jsx)(o.p,{children:"Verificando quais comportamentos est\xe3o no protocolo de um tipo de dado.\nVerificando quais comportamentos est\xe3o no protocolo de um tipo de dado."}),"\n",(0,s.jsx)(o.pre,{children:(0,s.jsx)(o.code,{className:"language-python",children:">>> dir(int)\n# atributos especiais da classse int\n['__abs__',\n '__add__',\n '__and__',\n '__bool__',\n '__ceil__',\n '__class__',\n '__delattr__',\n '__dir__',\n '__divmod__',\n '__doc__',\n '__eq__',\n '__float__',\n '__floor__',\n '__floordiv__',\n '__format__',\n '__ge__',\n '__getattribute__',\n '__getnewargs__',\n '__gt__',\n '__hash__',\n '__index__',\n '__init__',\n '__init_subclass__',\n '__int__',\n '__invert__',\n '__le__',\n '__lshift__',\n '__lt__',\n '__mod__',\n '__mul__',\n '__ne__',\n '__neg__',\n '__new__',\n '__or__',\n '__pos__',\n '__pow__',\n '__radd__',\n '__rand__',\n '__rdivmod__',\n '__reduce__',\n '__reduce_ex__',\n '__repr__',\n '__rfloordiv__',\n '__rlshift__',\n '__rmod__',\n '__rmul__',\n '__ror__',\n '__round__',\n '__rpow__',\n '__rrshift__',\n '__rshift__',\n '__rsub__',\n '__rtruediv__',\n '__rxor__',\n '__setattr__',\n '__sizeof__',\n '__str__',\n '__sub__',\n '__subclasshook__',\n '__truediv__',\n '__trunc__',\n '__xor__',\n \n # daqui para baixo est\xe3o atributos p\xfablicos que podemos usar diretamente\n 'as_integer_ratio',\n 'bit_count',\n 'bit_length',\n 'conjugate',\n 'denominator',\n 'from_bytes',\n 'imag',\n 'numerator',\n 'real',\n 'to_bytes']\n"})}),"\n",(0,s.jsxs)(o.p,{children:["A lista acima exibe os nomes de todos os atributos dos objetos armazenados com\na classe ",(0,s.jsx)(o.code,{children:"int"}),". Tudo o que come\xe7a com ",(0,s.jsx)(o.code,{children:"__"})," e termina com ",(0,s.jsx)(o.code,{children:"__"})," s\xe3o chamados de\nm\xe9todos\ndunder e s\xe3o atributos especiais do modelo de dados do Python. N\xe3o precisamos\nusar esses atributos diretamente em nosso c\xf3digo (apesar de \xe0s vezes eles serem\n\xfateis). Normalmente, utilizamos abstra\xe7\xf5es que por baixo dos panos far\xe3o a\nchamada para esses m\xe9todos.\nNeste momento, n\xe3o vamos falar de todos eles, pois s\xe3o muitos, e a ideia \xe9 que\naos poucos voc\xea v\xe1 entendendo conforme utiliza. Mas vamos explorar um exemplo\nsimples e que provavelmente usaremos sempre."]}),"\n",(0,s.jsx)(o.p,{children:(0,s.jsx)(o.strong,{children:"Protocolo Addible"})}),"\n",(0,s.jsxs)(o.p,{children:["Um dos m\xe9todos ali na lista retornada pelo ",(0,s.jsx)(o.code,{children:"dir(int)"})," \xe9 chamado ",(0,s.jsx)(o.code,{children:"__add__"})," (\nDunder Add). Add em portugu\xeas significa adicionar e todo objeto em Python\nque possui este m\xe9todo ",(0,s.jsx)(o.code,{children:"__add__"})," n\xf3s chamamos de um objeto Addible. Isso\nsignifica que com este objeto podemos efetuar opera\xe7\xf5es de adi\xe7\xe3o, ou seja,\npodemos somar um n\xfamero a outro."]}),"\n",(0,s.jsx)(o.p,{children:"Exemplo:"}),"\n",(0,s.jsx)(o.pre,{children:(0,s.jsx)(o.code,{className:"language-python",children:"preco = 10\nimposto = 2\ntotal = preco + imposto\n"})}),"\n",(0,s.jsxs)(o.p,{children:["No exemplo acima, fizemos uma opera\xe7\xe3o de soma utilizando 2 objetos\ninteiros ",(0,s.jsx)(o.code,{children:"preco"})," e ",(0,s.jsx)(o.code,{children:"imposto"}),", e para efetuar a opera\xe7\xe3o usamos o operador ",(0,s.jsx)(o.code,{children:"+"}),",\nque \xe9 exatamente o que aprendemos nas aulas de matem\xe1tica b\xe1sica na escola."]}),"\n",(0,s.jsxs)(o.p,{children:["Acontece que por debaixo dos panos, o Python ao\ninterpretar ",(0,s.jsx)(o.code,{children:"total = preco + imposto"})," vai, na verdade, efetuar outra opera\xe7\xe3o,\nele vai fazer:"]}),"\n",(0,s.jsx)(o.pre,{children:(0,s.jsx)(o.code,{className:"language-python",children:"total = preco.__add__(imposto)\n"})}),"\n",(0,s.jsxs)(o.p,{children:["O operador ",(0,s.jsx)(o.code,{children:"+"})," \xe9 um s\xedmbolo que faz o Python invocar o m\xe9todo ",(0,s.jsx)(o.code,{children:"__add__"})," no\nobjeto que est\xe1 do lado esquerdo de uma express\xe3o."]}),"\n",(0,s.jsxs)(o.p,{children:[(0,s.jsx)(o.strong,{children:"IMPORTANTE:"})," No dia a dia, n\xf3s usamos apenas os operadores da forma\nabstra\xedda. Por exemplo: ",(0,s.jsx)(o.code,{children:"1 + 1"}),", ",(0,s.jsx)(o.code,{children:"10 - 8"}),", ",(0,s.jsx)(o.code,{children:"5 * 4"}),", etc. Por\xe9m, \xe9 importante\nvoc\xea saber como isso \xe9 implementado pelo Python, pois atrav\xe9s de uma lista de\natributos voc\xea conseguir\xe1 determinar o que aquele objeto suporta de\nopera\xe7\xf5es. Todos os outros comportamentos que esperamos de um n\xfamero inteiro\ntamb\xe9m estar\xe3o implementados naquela lista, alguns exemplos:"]}),"\n",(0,s.jsxs)(o.ul,{children:["\n",(0,s.jsxs)(o.li,{children:["A opera\xe7\xe3o ",(0,s.jsx)(o.code,{children:"preco - desconto"})," internamente \xe9 ",(0,s.jsx)(o.code,{children:"preco.__sub__(desconto)"}),"."]}),"\n",(0,s.jsxs)(o.li,{children:[(0,s.jsx)(o.code,{children:"preco * quantidade"})," \xe9 ",(0,s.jsx)(o.code,{children:"preco.__mul__(quantidade)"}),"."]}),"\n",(0,s.jsxs)(o.li,{children:[(0,s.jsx)(o.code,{children:"preco / parcelas"})," \xe9 ",(0,s.jsx)(o.code,{children:"preco.__div__(parcelas)"}),"."]}),"\n"]}),"\n",(0,s.jsxs)(o.p,{children:["Essas s\xe3o as 4 opera\xe7\xf5es matem\xe1ticas b\xe1sicas, mas para todos os outros\noperadores como potencia\xe7\xe3o ",(0,s.jsx)(o.code,{children:"**"})," -> ",(0,s.jsx)(o.code,{children:"__pow__"}),", m\xf3dulo ",(0,s.jsx)(o.code,{children:"%"})," -> ",(0,s.jsx)(o.code,{children:"__mod__"}),", ter\xe1\nsempre um desses m\xe9todos dunder especiais."]}),"\n",(0,s.jsxs)(o.p,{children:["E n\xe3o apenas para opera\xe7\xf5es matem\xe1ticas, essa l\xf3gica vai seguir para qualquer\noutra express\xe3o do Python, ser\xe1 muito comum n\xf3s fazermos compara\xe7\xf5es como\nfizemos no nosso script ",(0,s.jsx)(o.code,{children:"hello.py"}),":"]}),"\n",(0,s.jsx)(o.pre,{children:(0,s.jsx)(o.code,{className:"language-python",children:'if current_language == "pt_BR":\n    msg = "Hello, World!"\n'})}),"\n",(0,s.jsxs)(o.p,{children:["A parte ",(0,s.jsx)(o.code,{children:'current_language == "pt_BR"'})," ir\xe1 invocar o protocolo ",(0,s.jsx)(o.code,{children:"Comparable"})," que\nfaz com que o objeto possa ser comparado com outro e o m\xe9todo Dunder que\nimplementa essa funcionalidade \xe9 o ",(0,s.jsx)(o.code,{children:"__eq__"}),". Pode testar com:"]}),"\n",(0,s.jsx)(o.pre,{children:(0,s.jsx)(o.code,{className:"language-python",children:">>> idade = 25\n# Comparando por igualdade\n>>> idade == 25\nTrue\n# O mesmo resultado\n>>> idade.__eq__(25)\nTrue\n"})}),"\n",(0,s.jsxs)(o.p,{children:[(0,s.jsx)(o.strong,{children:"IMPORTANTE:"})," Lembre-se que n\xe3o usamos o ",(0,s.jsx)(o.code,{children:".__eq__"})," diretamente, quem faz isso\npara n\xf3s \xe9 o interpretador quando ele encontra o sinal de ",(0,s.jsx)(o.code,{children:"=="}),". Teremos um\nm\xe9todo dunder similar ao ",(0,s.jsx)(o.code,{children:"__eq__"})," no objeto para todos os outros operadores de\ncompara\xe7\xe3o, como por\nexemplo ",(0,s.jsx)(o.code,{children:">"})," -> ",(0,s.jsx)(o.code,{children:"__gt__"}),", ",(0,s.jsx)(o.code,{children:"<"})," -> ",(0,s.jsx)(o.code,{children:"__lt__"}),", ",(0,s.jsx)(o.code,{children:">="})," -> ",(0,s.jsx)(o.code,{children:"__ge__"}),", ",(0,s.jsx)(o.code,{children:"<="})," -> ",(0,s.jsx)(o.code,{children:"__le__"})," e\nassim por diante."]}),"\n",(0,s.jsx)(o.p,{children:"Esta mesma l\xf3gica vai ser usada para todos os outros tipos de dados em Python."})]})}function l(e={}){const{wrapper:o}={...(0,a.R)(),...e.components};return o?(0,s.jsx)(o,{...e,children:(0,s.jsx)(_,{...e})}):_(e)}},8453:(e,o,n)=>{n.d(o,{R:()=>i,x:()=>d});var s=n(6540);const a={},r=s.createContext(a);function i(e){const o=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function d(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),s.createElement(r.Provider,{value:o},e.children)}}}]);