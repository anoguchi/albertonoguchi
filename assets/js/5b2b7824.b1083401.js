"use strict";(self.webpackChunkclassic=self.webpackChunkclassic||[]).push([[1025],{5828:(e,o,s)=>{s.r(o),s.d(o,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>t,metadata:()=>r,toc:()=>d});var n=s(4848),a=s(8453);const t={id:"sets",title:"Sets",tags:["tipos compostos","tipos de dados","sets","python"],sidebar_position:3},i="Sets",r={id:"python-base/base/tipos/tipo-composto/sets",title:"Sets",description:"Teoria dos conjuntos:",source:"@site/docs/python-base/base/tipos/tipo-composto/sets.md",sourceDirName:"python-base/base/tipos/tipo-composto",slug:"/python-base/base/tipos/tipo-composto/sets",permalink:"/albertonoguchi/docs/python-base/base/tipos/tipo-composto/sets",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/python-base/base/tipos/tipo-composto/sets.md",tags:[{label:"tipos compostos",permalink:"/albertonoguchi/docs/tags/tipos-compostos"},{label:"tipos de dados",permalink:"/albertonoguchi/docs/tags/tipos-de-dados"},{label:"sets",permalink:"/albertonoguchi/docs/tags/sets"},{label:"python",permalink:"/albertonoguchi/docs/tags/python"}],version:"current",sidebarPosition:3,frontMatter:{id:"sets",title:"Sets",tags:["tipos compostos","tipos de dados","sets","python"],sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Lista",permalink:"/albertonoguchi/docs/python-base/base/tipos/tipo-composto/lista"},next:{title:"Dicion\xe1rios",permalink:"/albertonoguchi/docs/python-base/base/tipos/tipo-composto/dicionario"}},c={},d=[{value:"Performance",id:"performance",level:3},{value:"Mutabilidade",id:"mutabilidade",level:3},{value:"Deduplica\xe7\xe3o",id:"deduplica\xe7\xe3o",level:3},{value:"Desvantagens dos sets?",id:"desvantagens-dos-sets",level:3}];function l(e){const o={code:"code",h1:"h1",h3:"h3",img:"img",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(o.h1,{id:"sets",children:"Sets"}),"\n",(0,n.jsx)(o.p,{children:"Teoria dos conjuntos:"}),"\n",(0,n.jsx)(o.p,{children:(0,n.jsx)(o.img,{alt:"teoria dos conjuntos",src:s(9189).A+"",width:"434",height:"322"})}),"\n",(0,n.jsx)(o.p,{children:"Python tem um tipo de objeto para representar este tipo composto, as\ncaracter\xedsticas de uso s\xe3o bastante similares com listas e tuplas, mas \xe9 um\nobjeto bastante particular com usos espec\xedficos."}),"\n",(0,n.jsx)(o.p,{children:"Sets podem ser criados usando as sintaxes:"}),"\n",(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{className:"language-python",children:'# A partir de qualquer objeto iter\xe1vel\niteravel = [1, 2, 3]  # list\niteravel = 1, 2, 3 # tuple\niteravel = "Banana"  # str\n\n# usando a classe\nset(iteravel)\n\n# usando literais com { e }\n{1, 2, 3, 4}\n\n# desempacotando tuplas, listas ou textos\n{*iteravel}\n'})}),"\n",(0,n.jsx)(o.p,{children:"Aplicamos a teoria dos conjuntos usando operadores"}),"\n",(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{className:"language-python",children:">>> conjunto_a = [1, 2, 3, 4, 5]\n>>> conjunto_b = [4, 5, 6, 7, 8]\n\n# | para uni\xe3o\n>>> set(conjunto_a) | set(conjunto_b)\n{1, 2, 3, 4, 5, 6, 7, 8}\n\n# & para intersec\xe7\xe3o\n>>> set(conjunto_a) & set(conjunto_b)\n{4, 5}\n\n# \u2013 para diferen\xe7a\n>>> set(conjunto_a) - set(conjunto_b)\n{1, 2, 3}\n\n# para ^ diferen\xe7a sim\xe9trica\n>>> set(conjunto_a) ^ set(conjunto_b)\n{1, 2, 3, 6, 7, 8}\n"})}),"\n",(0,n.jsx)(o.p,{children:"Interessante, mas voc\xea pode estar se perguntando onde usar isso?"}),"\n",(0,n.jsx)(o.p,{children:"Pensa numa rede social como o twitter, no conjunto A estao as pessoas que\nvoc\xea segue, no conjunto B est\xe3o as que te seguem de volta, com este objeto voc\xea\nconsegue determinar rapidamente quem n\xe3o te segue de volta."}),"\n",(0,n.jsxs)(o.p,{children:["Voc\xea pode tamb\xe9m usar ",(0,n.jsx)(o.code,{children:"set"})," para determinar quais seguidores voc\xea e algum amigo\ntem em comum na mesma rede social."]}),"\n",(0,n.jsx)(o.h3,{id:"performance",children:"Performance"}),"\n",(0,n.jsx)(o.p,{children:"Fazer buscar em sequ\xeancias \xe9 uma opera\xe7\xe3o bastante pesada, imagina que no seu\ntwitter voc\xea tem 5000 seguidores e voc\xea deseja buscar um deles ou fazer essas\nopera\xe7\xf5es de compara\xe7\xe3o como fizemos com os conjuntos."}),"\n",(0,n.jsxs)(o.p,{children:["Se voc\xea tiver uma lista ",(0,n.jsx)(o.code,{children:'["joao", "bruno", "maria", ...]'})," contendo os\nelementos,\ne quiser, por exemplo, buscar pelo usuario ",(0,n.jsx)(o.code,{children:'"alfredo"'})," o python vai ter que\npercorrer toda a lista e comparar elemento por elemento at\xe9 encontrar o\nalfredo, e se o alfredo estiver no final? Vai demorar muito, essa \xe9 uma\nopera\xe7\xe3o com uma complexidade algoritmica ",(0,n.jsx)(o.code,{children:"O(n)"})," pois Python vai ter que\nefetuar uma compara\xe7\xe3o para cada item ",(0,n.jsx)(o.code,{children:"n"})," da lista."]}),"\n",(0,n.jsx)(o.p,{children:"Os sets implementam uma hash table! \ud83c\udf89"}),"\n",(0,n.jsx)(o.p,{children:"\xc9 como se eles tivessem um indice gravado neles com uma tabela invertida\ndizendo"}),"\n",(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{children:'"joao" -> "esta na posi\xe7\xe3o 0"\n"alfredo" -> "esta na posicao 345"\n'})}),"\n",(0,n.jsxs)(o.p,{children:["Portanto, quando precisarmos buscar o ",(0,n.jsx)(o.code,{children:"alfredo"})," o python olha primeiro essa\ntabela e j\xe1 vai diretamente na informa\xe7\xe3o que est\xe1 em ",(0,n.jsx)(o.code,{children:"345"})," como se fizessemos\n",(0,n.jsx)(o.code,{children:"users[345]"})," em uma lista e a complexidade desta opera\xe7\xe3o passa a ser ",(0,n.jsx)(o.code,{children:"O(1)"}),"\npois agora s\xf3 tem uma compara\xe7\xe3o a ser feita."]}),"\n",(0,n.jsx)(o.p,{children:"Estamos super simplificando a ideia, tem mais detalhes\ninternos nessa implementa\xe7\xe3o."}),"\n",(0,n.jsx)(o.p,{children:"Por que isso importa? Sets s\xe3o mais r\xe1pidos!"}),"\n",(0,n.jsxs)(o.p,{children:["Opera\xe7\xf5es como ",(0,n.jsx)(o.code,{children:'if "alfredo" in usuarios:'})," e se ",(0,n.jsx)(o.code,{children:"usuarios"})," for um ",(0,n.jsx)(o.code,{children:"set"})," ir\xe1\nser bem mais r\xe1pido do que caso usuarios seja uma lista ou tupla."]}),"\n",(0,n.jsx)(o.h3,{id:"mutabilidade",children:"Mutabilidade"}),"\n",(0,n.jsx)(o.p,{children:"Voc\xea pode criar um conjunto vazio e ir adicionando elementos e tamb\xe9m pode\nremover elementos, eles s\xe3o mut\xe1veis:"}),"\n",(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{className:"language-python",children:">>> a = set([1,2,3])\n>>> a.add(4)\n>>> a.remove(1)\n>>> print(a)\n{2, 3, 4}\n"})}),"\n",(0,n.jsx)(o.h3,{id:"deduplica\xe7\xe3o",children:"Deduplica\xe7\xe3o"}),"\n",(0,n.jsx)(o.p,{children:"Esta \xe9 uma das caracter\xedsticas mais interessantes dos sets e talvez a sua maior\nutilidade, sets n\xe3o permitem itens duplicados, ent\xe3o ao criar um set voc\xea\nelimina as duplicidades."}),"\n",(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{className:"language-python",children:'>>> conjunto = set()\n>>> conjunto.add("Bruno")\n>>> conjunto.add("Maria")\n>>> conjunto.add("Bruno")\n>>> conjunto.add("Maria")\n>>> conjunto.add("Bruno")\n>>> conjunto.add("Bruno")\n>>> conjunto.add("Bruno")\n>>> conjunto.add("Bruno")\n\n# Digamos que por algum motivo (ou engano) adicionou o mesmo item mais de \numa vez\n# sem problemas :)\n\n>>> print(conjunto)\n{\'Bruno\', \'Maria\'}\n\n# E isso tamb\xe9m funciona em tempo de atribui\xe7\xe3o\n>>> {1, 2, 3, 1, 1, 1, 1, 5, 5, 5, 5}\n{1, 2, 3, 5}\n'})}),"\n",(0,n.jsx)(o.h3,{id:"desvantagens-dos-sets",children:"Desvantagens dos sets?"}),"\n",(0,n.jsxs)(o.ul,{children:["\n",(0,n.jsx)(o.li,{children:"N\xe3o respeitam a ordem de inser\xe7\xe3o, os elementos s\xe3o ordenados automaticamente"}),"\n",(0,n.jsx)(o.li,{children:"N\xe3o permitem subscri\xe7\xe3o para acesso aos valores"}),"\n"]}),"\n",(0,n.jsxs)(o.p,{children:["Ou seja, voc\xea n\xe3o pode fazer ",(0,n.jsx)(o.code,{children:"set[0]"})," para acessar o primeiro elemento."]}),"\n",(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{className:"language-python",children:">>> conjunto = {4, 5, 6, 7, 8}\n\nconjunto[0]\n---------------------------------------------\nTypeError Traceback (most recent call last)\nInput In [60], in <module>\n----\x3e 1 conjunto[0]\n\nTypeError: 'set' object is not subscriptable\n"})}),"\n",(0,n.jsxs)(o.p,{children:["Mas voc\xea pode usar ",(0,n.jsx)(o.code,{children:"in"})," ou converter o set em uma lista."]}),"\n",(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{className:"language-python",children:">>> 4 in conjunto\nTrue\n\nlist(conjunto)[0]\n4\n"})})]})}function u(e={}){const{wrapper:o}={...(0,a.R)(),...e.components};return o?(0,n.jsx)(o,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}},9189:(e,o,s)=>{s.d(o,{A:()=>n});const n=s.p+"assets/images/teoria-conjuntos-848efa7daf2ce256edd52e802f211bac.png"},8453:(e,o,s)=>{s.d(o,{R:()=>i,x:()=>r});var n=s(6540);const a={},t=n.createContext(a);function i(e){const o=n.useContext(t);return n.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function r(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),n.createElement(t.Provider,{value:o},e.children)}}}]);