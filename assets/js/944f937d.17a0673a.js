"use strict";(self.webpackChunkclassic=self.webpackChunkclassic||[]).push([[4019],{8333:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>d,contentTitle:()=>i,default:()=>c,frontMatter:()=>r,metadata:()=>t,toc:()=>p});var s=o(4848),a=o(8453);const r={id:"input-output",title:"Input e Output",tags:["input","output","python"],sidebar_position:8},i="Input e Output",t={id:"python-base/base/input-output",title:"Input e Output",description:"Um dispositivo computacional (device) possui al\xe9m de seus componentes internos",source:"@site/docs/python-base/base/input-output.md",sourceDirName:"python-base/base",slug:"/python-base/base/input-output",permalink:"/albertonoguchi/docs/python-base/base/input-output",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/python-base/base/input-output.md",tags:[{label:"input",permalink:"/albertonoguchi/docs/tags/input"},{label:"output",permalink:"/albertonoguchi/docs/tags/output"},{label:"python",permalink:"/albertonoguchi/docs/tags/python"}],version:"current",sidebarPosition:8,frontMatter:{id:"input-output",title:"Input e Output",tags:["input","output","python"],sidebar_position:8},sidebar:"tutorialSidebar",previous:{title:"Dicion\xe1rios",permalink:"/albertonoguchi/docs/python-base/base/tipos/tipo-composto/dicionario"},next:{title:"Manipulando arquivos e pastas",permalink:"/albertonoguchi/docs/python-base/base/manipulando-arquivos-e-pastas"}},d={},p=[{value:"Sys",id:"sys",level:3},{value:"Python e o Stdout",id:"python-e-o-stdout",level:3},{value:"Python e o sdtdin",id:"python-e-o-sdtdin",level:3},{value:"CLI Arguments",id:"cli-arguments",level:3},{value:"Cuidados ao ler inputs.",id:"cuidados-ao-ler-inputs",level:3},{value:"Exemplo",id:"exemplo",level:3}];function u(e){const n={code:"code",h1:"h1",h3:"h3",img:"img",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"input-e-output",children:"Input e Output"}),"\n",(0,s.jsxs)(n.p,{children:["Um dispositivo computacional (device) possui al\xe9m de seus componentes internos\nduas interfaces virtuais muito importantes quando programamos software de\nterminal que s\xe3o a ",(0,s.jsx)(n.code,{children:"stdin"})," e a ",(0,s.jsx)(n.code,{children:"stdout"}),". De forma bastante simplificada,\npodemos dizer que toda vez que precisamos imprimir uma informa\xe7\xe3o na tela, o\nprocessador envia essa informa\xe7\xe3o para o ",(0,s.jsx)(n.code,{children:"stdout"})," e esta interface que se\nencarrega de imprimir onde for devido, ex: monitor, terminal, arquivo.\nE o mesmo ocorre quando precisamos ler as informa\xe7\xf5es a partir de um\ndispositivo de entrada como um teclado, mas neste caso usamos a interface\n",(0,s.jsx)(n.code,{children:"stdin"}),"."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"stdin-stdout",src:o(274).A+"",width:"767",height:"543"})}),"\n",(0,s.jsx)(n.h3,{id:"sys",children:"Sys"}),"\n",(0,s.jsx)(n.p,{children:"Em Python existe um m\xf3dulo chamado sys que fornece utilidades para interagir\ncom o sistema, uma das utilidades por exemplo \xe9 verificar em qual plataforma o\nprograma est\xe1 sendo executado:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:">>> import sys\n>>> print(sys.platform)\n'linux'\n"})}),"\n",(0,s.jsx)(n.h3,{id:"python-e-o-stdout",children:"Python e o Stdout"}),"\n",(0,s.jsxs)(n.p,{children:["No m\xf3dulo ",(0,s.jsx)(n.code,{children:"sys"})," tamb\xe9m encontramos o objeto ",(0,s.jsx)(n.code,{children:"stdout"})," que \xe9 o respons\xe1vel por se\ncomunicar via texto com a respectiva interface."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:">>> import sys\n>>> sys.stdout\n<_io.TextIOWrapper name='<stdout>' mode='w' encoding='utf-8'>\n"})}),"\n",(0,s.jsx)(n.p,{children:"Este objeto \xe9 um file descriptor e em sistemas Linux por exemplo, tudo \xe9\nbaseado em descritores de arquivos, n\xf3s podemos escrever neste descritor e o\nresultado ser\xe1 a impress\xe3o da mensagem na tela, repare que este objeto respeita\na tabela de caracteres UTF-8 que n\xf3s aprendemos na aula sobre textos."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:">>> import sys\n>>> quantidade_de_chars = sys.stdout.write(\"Bruno\")\n'Bruno'\n>>> print(quantidade_de_chars)\n5\n"})}),"\n",(0,s.jsxs)(n.p,{children:["A sa\xedda da escrita em um objeto ",(0,s.jsx)(n.code,{children:"int"})," contendo a quantidade de caracteres que\nforam impressos com sucesso na sa\xedda padr\xe3o."]}),"\n",(0,s.jsxs)(n.p,{children:["N\xf3s raramente precisaremos usar ",(0,s.jsx)(n.code,{children:"sys.stdout"})," diretamente pois o Python oferece\numa abstra\xe7\xe3o com usabilidade melhor, que \xe9 a nossa j\xe1 conhecida fun\xe7\xe3o print."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:">>> help(print)\nprint(value, ..., sep=' ', end='\\n', file=sys.stdout, flush=False)\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Repare que ",(0,s.jsx)(n.code,{children:"print"})," recebe um par\xe2metro ",(0,s.jsx)(n.code,{children:"file"})," que por padr\xe3o \xe9 o ",(0,s.jsx)(n.code,{children:"sys.stdout"}),"\ne faz isso utilizando uma t\xe9cnica de composi\xe7\xe3o chamada inje\xe7\xe3o de depend\xeancia."]}),"\n",(0,s.jsxs)(n.p,{children:["N\xf3s podemos, apenas a t\xedtulo de curiosidade, substituir o argumento ",(0,s.jsx)(n.code,{children:"file"})," por\nqualquer outro objeto que seja um file descriptor."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'>>> print("Hello", file=open("hello.txt", "a"))\n'})}),"\n",(0,s.jsxs)(n.p,{children:["No exemplo acima o Python n\xe3o ir\xe1 imprimir ",(0,s.jsx)(n.code,{children:"Hello"})," na tela, ao inv\xe9s disso ele\nvai gravar ",(0,s.jsx)(n.code,{children:"Hello"})," em um arquivo chamado ",(0,s.jsx)(n.code,{children:"hello.txt"})," e voc\xea pode conferir com o\ncomando ",(0,s.jsx)(n.code,{children:"cat"})," no Linux."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"$ cat hello.txt\nHello\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Experimente executar ",(0,s.jsx)(n.code,{children:"tail -f hello.txt"})," em seu terminal Linux, e em outro\nterminal executar aquele print que escreve no arquivo, parece m\xe1gica mas voc\xea\nvai ver as mensagens sendo impressas diretamente para dentro do arquivo de\ntexto."]}),"\n",(0,s.jsx)(n.h3,{id:"python-e-o-sdtdin",children:"Python e o sdtdin"}),"\n",(0,s.jsx)(n.p,{children:"Assim como a sa\xedda padr\xe3o \xe9 o monitor ou terminal, a entrada padr\xe3o \xe9 sempre o\nprompt de comandos e n\xf3s assumimos que a entrada ser\xe1 feita atrav\xe9s de um\nteclado."}),"\n",(0,s.jsxs)(n.p,{children:["A interface para se comunicar com este dispositivo tamb\xe9m est\xe1 no m\xf3dulo ",(0,s.jsx)(n.code,{children:"sys"}),"."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:">>> import sys\n>>> letras = sys.stdin.read(4)\n# Aqui o cursor fica esperando a digita\xe7\xe3o de 3 caracteres seguidos de enter\nABC<enter>\n>>> print(letras)\n'\\nABC'\n"})}),"\n",(0,s.jsxs)(n.p,{children:["A boa not\xedcia e que n\xe3o precisamos usar da forma acima, Python oferece uma\nabstra\xe7\xe3o em cima desta interface que \xe9 a fun\xe7\xe3o ",(0,s.jsx)(n.code,{children:"input"})," que serve para lermos\na entrada a partir da digita\xe7\xe3o do usu\xe1rio ou stdin do terminal."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:">>> nome = input(\"Qual o seu nome?\\n\")\nQual o seu nome?\n# O cursor ficar\xe1 esperando digitarmos algum texto seguido de enter\nBruno<enter>\n>>> print(nome)\n'Bruno'\n"})}),"\n",(0,s.jsxs)(n.p,{children:["A fun\xe7\xe3o ",(0,s.jsx)(n.code,{children:"input"})," sempre ir\xe1 ler as informa\xe7\xe3o em formato de texto e seu\nargumento \xfanico \xe9 a mensagem a ser exibida para o usu\xe1rio."]}),"\n",(0,s.jsxs)(n.p,{children:["Uma outra utilidade para a ",(0,s.jsx)(n.code,{children:"input"})," \xe9 bloquear a execu\xe7\xe3o do programa at\xe9 que o\nusu\xe1rio pressione enter."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'>>> print("Programa fazendo alguma coisa...")\n>>> input("Pressione enter quando quiser continuar...")\n# aqui o programa entra em `pausa` e s\xf3 continua quando o usu\xe1rio pressionar enter\n'})}),"\n",(0,s.jsx)(n.h3,{id:"cli-arguments",children:"CLI Arguments"}),"\n",(0,s.jsx)(n.p,{children:"Outra forma de ler informa\xe7\xf5es para dentro de um script \xe9 atrav\xe9s de argumentos\nde CLI quando usamos uma ferramenta de terminal \xe9 comum passarmos par\xe2metros\npara dentro do programa, como por exemplo:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"python --version\npython -c 'comando'\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Repare que al\xe9m do programa ",(0,s.jsx)(n.code,{children:"python"})," passamos os par\xe2metros ",(0,s.jsx)(n.code,{children:"--version"})," e o\n",(0,s.jsx)(n.code,{children:"-c 'comando'"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["Em nossos pr\xf3prios scripts podemos ler essas informa\xe7\xf5es atrav\xe9s do m\xf3dulo\n",(0,s.jsx)(n.code,{children:"sys"}),"."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"programa.py"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"import sys\nprint(sys.argv)\n\n"})}),"\n",(0,s.jsx)(n.p,{children:"No terminal"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"$ python programa.py argumento1 argumento2 --nome=Bruno\n['programa.py', 'argumento1', 'argumento2', '--nome=Bruno']\n"})}),"\n",(0,s.jsxs)(n.p,{children:["A lista ",(0,s.jsx)(n.code,{children:"sys.argv"})," ir\xe1 coletar os argumentos passados para o programa, sendo\nque o nome do programa estar\xe1 sempre na primeira posi\xe7\xe3o, se quisermos\nconsiderar apenas os argumentos passados ap\xf3s o nome do programa podemos fazer\num fatiamento desta lista."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"programa.py"}),"\nprint(sys.argv[1:]) # come\xe7ando no elemento 1 (ignorando o 0)"]}),"\n",(0,s.jsx)(n.p,{children:"No terminal"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"$ python programa.py argumento1 argumento2 --nome=Bruno\n['argumento1', 'argumento2', '--nome=Bruno']\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Cada item da nossa lista de argumentos ser\xe1 um objeto do tipo ",(0,s.jsx)(n.code,{children:"str"})," portanto\npodemos usar qualquer opera\xe7\xe3o v\xe1lida com textos, por exemplo, podemos\ntransformar os argumentos passados pelo CLI em um dicion\xe1rio."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"programa.py"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"import sys\nargumentos = {}\nfor arg in sys.argv[1:]:\n    chave, valor = arg.split(\"=\")\n    argumentos[chave.lstrip('-').strip()] = valor.strip()\n\nprint(argumentos)\n"})}),"\n",(0,s.jsx)(n.p,{children:"Ao executar o programa acima obtemos:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"$ python programa.py --nome=Bruno --idade=15 --cidade=Viana\n{'nome': 'Bruno', 'idade': '15', 'cidade': 'Viana'}\n"})}),"\n",(0,s.jsx)(n.p,{children:"Em nosso programa podemos usar este dicion\xe1rio para tomar as decis\xf5es de fluxo\ndo programa."}),"\n",(0,s.jsx)(n.h3,{id:"cuidados-ao-ler-inputs",children:"Cuidados ao ler inputs."}),"\n",(0,s.jsxs)(n.p,{children:["Assim como as vari\xe1veis de ambiente que j\xe1 aprendemos em nosso primeiro script\ntanto os ",(0,s.jsx)(n.code,{children:"inputs"})," quanto ",(0,s.jsx)(n.code,{children:"CLI args"})," sempre ser\xe3o lidos como texto ",(0,s.jsx)(n.code,{children:"str"}),"\nportanto pode ser necess\xe1rio fazer valida\xe7\xf5es e transforma\xe7\xf5es, alguns\nexemplos."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'# Garantir que n\xe3o tenha espa\xe7os em branco no come\xe7o ou final\nvalor = input("Digite um valor").strip()\n\n# Remover `--` em argumentos de linha de comando\nvalor = sys.argv[0].lstrip(\'-\')\n\n# Converter texto para n\xfamero inteiro\nvalor - int(input("Digite um n\xfamero").strip())\n'})}),"\n",(0,s.jsxs)(n.p,{children:["Em todos esses casos ainda precisamos nos preocupar com o tratamento de\n",(0,s.jsx)(n.code,{children:"Exceptions"})]}),"\n",(0,s.jsx)(n.h3,{id:"exemplo",children:"Exemplo"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'#!/usr/bin/env python3\n"""Calculadora infix.\n\nFuncionamento:\n\n[opera\xe7\xe3o] [n1] [n2]\n\nOpera\xe7\xf5es:\nsum -> +\nsub -> -\nmul -> *\ndiv -> /\n\nUso:\n$ infixcalc.py sum 5 2\n7\n\n$ infixcalc.py mul 10 5\n50\n\n$ infixcalc.py\nopera\xe7\xe3o: sum\nn1: 5\nn2: 4\n9\n"""\n__version__ = "0.1.0"\n\nimport sys\narguments = sys.argv[1:]\n\n\nif not arguments:\n    operation = input("opera\xe7\xe3o:")\n    n1 = input("n1:")\n    n2 = input("n2:")\n    arguments = [operation, n1, n2]\nelif len(arguments) != 3:\n    print("N\xfamero de argumentos inv\xe1lidos")\n    print("ex: `sum 5 5`")\n    sys.exit(1)\n\noperation, *nums = arguments\n\nvalid_operations = ("sum", "sub", "mul", \'div\')\nif operation not in valid_operations:\n    print("Opera\xe7\xe3o inv\xe1lida")\n    print(valid_operations)\n    sys.exit(1)\n\nvalidated_nums = []\nfor num in nums:\n    if not num.replace(".", "").isdigit():\n        print(f"Numero inv\xe1lido {num}")\n        sys.exit(1)\n    if "." in num:\n        num = float(num)\n    else:\n        num = int(num)\n    validated_nums.append(num)\n    \nn1, n2 = validated_nums\n\n\nif operation == "sum":\n    result = n1 + n2\nelif operation == "sub":\n    result = n1 - n2\nelif operation == "mul":\n    result = n1 * n2\nelif operation == "div":\n    result = n1 / n2\n\nprint(f"O resultado \xe9 {result}")\n\n'})})]})}function c(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}},274:(e,n,o)=>{o.d(n,{A:()=>s});const s=o.p+"assets/images/input-output_02-be117631b943d7d7bb41a47a770abd51.png"},8453:(e,n,o)=>{o.d(n,{R:()=>i,x:()=>t});var s=o(6540);const a={},r=s.createContext(a);function i(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);