"use strict";(self.webpackChunkclassic=self.webpackChunkclassic||[]).push([[5655],{409:(e,s,o)=>{o.r(s),o.d(s,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>t,metadata:()=>r,toc:()=>c});var n=o(4848),a=o(8453);const t={id:"lista",title:"Lista",tags:["tipos compostos","tipos de dados","lista","python"],sidebar_position:2},i="Listas",r={id:"python-base/base/tipos/tipo-composto/lista",title:"Lista",description:"Listas s\xe3o bastante similares \xe0s tuplas e a maioria das opera\xe7\xf5es que podemos",source:"@site/docs/python-base/base/tipos/tipo-composto/listas.md",sourceDirName:"python-base/base/tipos/tipo-composto",slug:"/python-base/base/tipos/tipo-composto/lista",permalink:"/albertonoguchi/docs/python-base/base/tipos/tipo-composto/lista",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/python-base/base/tipos/tipo-composto/listas.md",tags:[{label:"tipos compostos",permalink:"/albertonoguchi/docs/tags/tipos-compostos"},{label:"tipos de dados",permalink:"/albertonoguchi/docs/tags/tipos-de-dados"},{label:"lista",permalink:"/albertonoguchi/docs/tags/lista"},{label:"python",permalink:"/albertonoguchi/docs/tags/python"}],version:"current",sidebarPosition:2,frontMatter:{id:"lista",title:"Lista",tags:["tipos compostos","tipos de dados","lista","python"],sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Tuplas",permalink:"/albertonoguchi/docs/python-base/base/tipos/tipo-composto/tuplas"},next:{title:"Sets",permalink:"/albertonoguchi/docs/python-base/base/tipos/tipo-composto/sets"}},l={},c=[];function p(e){const s={code:"code",h1:"h1",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.h1,{id:"listas",children:"Listas"}),"\n",(0,n.jsx)(s.p,{children:"Listas s\xe3o bastante similares \xe0s tuplas e a maioria das opera\xe7\xf5es que podemos\nfazer com tuplas tamb\xe9m podemos fazer com as listas. Uma das grandes diferen\xe7as\nest\xe1 na implementa\xe7\xe3o de protocolos de edi\xe7\xe3o dos elementos, portanto as listas\ns\xe3o mut\xe1veis e permitem que incluamos novos itens, permitem a remo\xe7\xe3o de itens\nexistentes e a reordena\xe7\xe3o."}),"\n",(0,n.jsxs)(s.p,{children:["As listas s\xe3o criadas usando os literais ",(0,n.jsx)(s.code,{children:"[ ]"})," ou a chamada para a\nclasse ",(0,n.jsx)(s.code,{children:"list"}),"."]}),"\n",(0,n.jsx)(s.p,{children:"Criando uma lista vazia"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-python",children:"colors = []  # forma preferida\n# ou\ncolors = list()\n"})}),"\n",(0,n.jsx)(s.p,{children:"Adicionando elementos ao final da lista"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-python",children:'colors.append("green")\n'})}),"\n",(0,n.jsx)(s.p,{children:"Adicionando elementos ao in\xedcio da lista"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-python",children:'colors.insert(0, "red")\n'})}),"\n",(0,n.jsx)(s.p,{children:"Adicionando em uma posi\xe7\xe3o espec\xedfica"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-python",children:'colors.insert(2, "blue")\n'})}),"\n",(0,n.jsx)(s.p,{children:"Obtendo o tamanho da lista"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-python",children:"len(colors)\n"})}),"\n",(0,n.jsx)(s.p,{children:"Acessando elementos via \xedndice"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-python",children:"button_color = colors[0]\n"})}),"\n",(0,n.jsx)(s.p,{children:"Desempacotamento (igual \xe0s tuplas)"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-python",children:"red, green, blue = colors\n"})}),"\n",(0,n.jsx)(s.p,{children:"E tamb\xe9m \xe9 poss\xedvel j\xe1 iniciar uma lista com valores."}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-python",children:'colors = ["red", "green", "blue"]\ncolors[0]  # "red"\n'})}),"\n",(0,n.jsx)(s.p,{children:"Podemos somar 2 listas (criando uma nova lista como resultado)"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-python",children:'nova_lista = colors + ["yellow"]\nprint(nova_lista)  # ["red", "green", "blue", "yellow"]\n'})}),"\n",(0,n.jsx)(s.p,{children:"E podemos estender uma lista in-place"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-python",children:'colors.extend(["purple"])\nprint(colors)  # ["red", "green", "blue", "purple"]\n\n# Ou usando um operador de acr\xe9scimo\ncolors += ["purple"]\nprint(colors)  # ["red", "green", "blue", "purple"]\n'})}),"\n",(0,n.jsx)(s.p,{children:"Remover elementos"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-python",children:'colors.remove("purple")\n# ou\ncolors.pop()\n'})}),"\n",(0,n.jsx)(s.p,{children:"Contar elementos"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-python",children:'colors.count("green")  # 1\n'})})]})}function d(e={}){const{wrapper:s}={...(0,a.R)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(p,{...e})}):p(e)}},8453:(e,s,o)=>{o.d(s,{R:()=>i,x:()=>r});var n=o(6540);const a={},t=n.createContext(a);function i(e){const s=n.useContext(t);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function r(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),n.createElement(t.Provider,{value:s},e.children)}}}]);